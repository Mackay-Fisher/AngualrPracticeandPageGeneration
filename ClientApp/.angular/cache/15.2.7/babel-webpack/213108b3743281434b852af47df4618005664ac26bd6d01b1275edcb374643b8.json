{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ValidCheckComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ValidCheckComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" A valid email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ValidCheckComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.submitted = false;\n    this.personalInfoForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n      // other form controls...\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.personalInfoForm.invalid) {\n      this.personalInfoForm.markAllAsTouched();\n      alert('Please fill out all the required fields.');\n      return;\n    }\n    // proceed with processing the form data\n  }\n}\n\nValidCheckComponent.ɵfac = function ValidCheckComponent_Factory(t) {\n  return new (t || ValidCheckComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nValidCheckComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ValidCheckComponent,\n  selectors: [[\"app-valid-check\"]],\n  decls: 15,\n  vars: 7,\n  consts: [[\"id\", \"tableLabel\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [\"type\", \"submit\"]],\n  template: function ValidCheckComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Form Test\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function ValidCheckComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵtemplate(7, ValidCheckComponent_div_7_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6);\n      i0.ɵɵtemplate(12, ValidCheckComponent_div_12_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.personalInfoForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"border-invalid\", ctx.submitted && ctx.personalInfoForm.controls[\"name\"].invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.personalInfoForm.controls.name.touched && ctx.personalInfoForm.controls.name.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"border-invalid\", ctx.submitted && ctx.personalInfoForm.controls[\"email\"].invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.personalInfoForm.controls.email.touched && ctx.personalInfoForm.controls.email.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;ICI/DC,2BAA0G;IACxGA,mCACF;IAAAA,iBAAM;;;;;IAMNA,2BAA6G;IAC3GA,4CACF;IAAAA,iBAAM;;;ADPV,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IAFtB,cAAS,GAAE,KAAK;IAGd,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACpCC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC;MACnD;KACD,CAAC;EACJ;;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACN,gBAAgB,CAACO,OAAO,EAAE;MACjC,IAAI,CAACP,gBAAgB,CAACQ,gBAAgB,EAAE;MACxCC,KAAK,CAAC,0CAA0C,CAAC;MACjD;;IAGF;EACF;;;AArBWZ,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCThClB,6BAAoB;MAAAA,yBAAS;MAAAA,iBAAK;MAElCA,+BAA6D;MAAxBA;QAAA,OAAYmB,cAAU;MAAA,EAAC;MAC1DnB,2BAAK;MACeA,qBAAK;MAAAA,iBAAQ;MAC/BA,2BAAoI;MACpIA,oEAEM;MACRA,iBAAM;MAENA,2BAAK;MACgBA,uBAAM;MAAAA,iBAAQ;MACjCA,4BAAwI;MACxIA,sEAEM;MACRA,iBAAM;MAINA,kCAAsB;MAAAA,uBAAM;MAAAA,iBAAS;;;MAnBjCA,eAA8B;MAA9BA,gDAA8B;MAGoBA,eAA+E;MAA/EA,gGAA+E;MAC7HA,eAAkG;MAAlGA,gIAAkG;MAOjDA,eAAgF;MAAhFA,iGAAgF;MACjIA,eAAqG;MAArGA,kIAAqG","names":["Validators","i0","ValidCheckComponent","constructor","fb","personalInfoForm","group","name","required","email","onSubmit","submitted","invalid","markAllAsTouched","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/mackayfisher/Desktop/APIver/AngularApi/ClientApp/src/app/valid-check/valid-check.component.ts","/Users/mackayfisher/Desktop/APIver/AngularApi/ClientApp/src/app/valid-check/valid-check.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-valid-check',\r\n  templateUrl: './valid-check.component.html'\r\n})\r\nexport class ValidCheckComponent {\r\n  personalInfoForm: FormGroup;\r\n  submitted= false;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.personalInfoForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      // other form controls...\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.personalInfoForm.invalid) {\r\n      this.personalInfoForm.markAllAsTouched();\r\n      alert('Please fill out all the required fields.');\r\n      return;\r\n    }\r\n    \r\n    // proceed with processing the form data\r\n  }\r\n}\r\n","<h1 id=\"tableLabel\">Form Test</h1>\r\n\r\n<form [formGroup]=\"personalInfoForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div>\r\n    <label for=\"name\">Name:</label>\r\n    <input type=\"text\" id=\"name\" formControlName=\"name\" [class.border-invalid]=\"submitted && personalInfoForm.controls['name'].invalid\">\r\n    <div *ngIf=\"submitted &&personalInfoForm.controls.name.touched && personalInfoForm.controls.name.invalid\">\r\n      Name is required.\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"email\">Email:</label>\r\n    <input type=\"email\" id=\"email\" formControlName=\"email\" [class.border-invalid]=\"submitted && personalInfoForm.controls['email'].invalid\">\r\n    <div *ngIf=\"submitted && personalInfoForm.controls.email.touched && personalInfoForm.controls.email.invalid\">\r\n      A valid email is required.\r\n    </div>\r\n  </div>\r\n\r\n  <!-- other inputs... -->\r\n\r\n  <button type=\"submit\">Submit</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}