{"ast":null,"code":"import { Component, Inject } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class TodoComponent {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.TodoList = [];\n    this.currentCount = 0;\n    this.currentItem = {};\n    this.ItemId = '';\n  }\n  getAllTasks() {\n    this.http.get('https://localhost:7253/api/TodoItems').subscribe(res => {\n      console.log(\"button pressed\");\n      console.log(res);\n      this.TodoList = res;\n    }), error => console.error(error);\n  }\n  getOneTask(id) {\n    if (isNaN(Number(id))) {\n      console.log(\"invalid input\");\n      return;\n    }\n    this.http.get(`https://localhost:7253/api/TodoItems/${id}`).subscribe(res => {\n      this.currentItem = res;\n    }), error => console.error(error);\n  }\n  UpdateTodo(todoitem, id) {\n    if (isNaN(Number(id))) {\n      console.log(\"invalid input\");\n      return;\n    }\n    return this.http.put(`https://localhost:7253/api/TodoItems/${id}`, todoitem);\n  }\n  PostTest(todos) {\n    return this.http.post(`https://localhost:7253/api/TodoItems`, todos);\n  }\n  DeleteItem(todo, id) {\n    return this.http.delete(`https://localhost:7253/api/TodoItems/${id}`);\n  }\n}\nTodoComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TodoComponent,\n  factory: TodoComponent.ɵfac,\n  providedIn: 'root'\n});\nfunction stoi(id) {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAO,eAAe;AAChD,SAASC,UAAU,QAAQ,eAAe;;AAW1C,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,IAAgB,EAA8BC,OAAe;IAA7D,SAAI,GAAJD,IAAI;IAA0C,YAAO,GAAPC,OAAO;IAJlE,aAAQ,GAAe,EAAE;IACzB,iBAAY,GAAG,CAAC;IAChB,gBAAW,GAAa,EAAc;IACtC,WAAM,GAAW,EAAE;EAE1B;EAEAC,WAAW;IACT,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,sCAAsC,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;MAChFC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7BD,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACG,QAAQ,GAAGH,GAAG;IACrB,CAAC,CAAC,EAAGI,KAAU,IAAKH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;EAC1C;EAEAC,UAAU,CAACC,EAAS;IAClB,IAAGC,KAAK,CAACC,MAAM,CAACF,EAAE,CAAC,CAAC,EAAC;MACnBL,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B;;IAEF,IAAI,CAACP,IAAI,CAACG,GAAG,CAAW,wCAAwCQ,EAAE,EAAE,CAAC,CAACP,SAAS,CAACC,GAAG,IAAG;MACpF,IAAI,CAACS,WAAW,GAAGT,GAAG;IACxB,CAAC,CAAC,EAAGI,KAAU,IAAKH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;EAC1C;EAEAM,UAAU,CAACC,QAAiB,EAAEL,EAAS;IACrC,IAAGC,KAAK,CAACC,MAAM,CAACF,EAAE,CAAC,CAAC,EAAC;MACnBL,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B;;IAEF,OAAO,IAAI,CAACP,IAAI,CAACiB,GAAG,CAAW,wCAAwCN,EAAE,EAAE,EAACK,QAAQ,CAAC;EACvF;EAEAE,QAAQ,CAACC,KAAgB;IACvB,OAAO,IAAI,CAACnB,IAAI,CAACoB,IAAI,CAAa,sCAAsC,EAACD,KAAK,CAAC;EACjF;EAEAE,UAAU,CAACC,IAAa,EAAEX,EAAS;IACjC,OAAO,IAAI,CAACX,IAAI,CAACuB,MAAM,CAAW,wCAAwCZ,EAAE,EAAE,CAAC;EACjF;;AAxCWb,aAAa;SAAbA,aAAa;EAAA0B,SAAb1B,aAAa;EAAA2B,YAHZ;AAAM;AAqDpB,SAASC,IAAI,CAACf,EAAU;EACtB,MAAM,IAAIgB,KAAK,CAAC,2BAA2B,CAAC;AAC9C","names":["Component","Inject","Injectable","TodoComponent","constructor","http","baseUrl","getAllTasks","get","subscribe","res","console","log","TodoList","error","getOneTask","id","isNaN","Number","currentItem","UpdateTodo","todoitem","put","PostTest","todos","post","DeleteItem","todo","delete","factory","providedIn","stoi","Error"],"sourceRoot":"","sources":["/Users/mackayfisher/Desktop/APIver/AngularApi/ClientApp/src/app/counter/Todo.component.ts"],"sourcesContent":["import { Component, Inject} from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class TodoComponent {\r\n  public TodoList: TodoItem[] = [];\r\n  public currentCount = 0;\r\n  public currentItem :TodoItem = {} as TodoItem;\r\n  public ItemId: string = '';\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n  }\r\n\r\n  getAllTasks(){\r\n    this.http.get<TodoItem[]>('https://localhost:7253/api/TodoItems').subscribe(res =>{\r\n      console.log(\"button pressed\")\r\n      console.log(res);\r\n      this.TodoList = res;\r\n    }), (error: any) => console.error(error);\r\n  }\r\n\r\n  getOneTask(id:string){\r\n    if(isNaN(Number(id))){\r\n      console.log(\"invalid input\");\r\n      return;\r\n    }\r\n    this.http.get<TodoItem>(`https://localhost:7253/api/TodoItems/${id}`).subscribe(res =>{\r\n      this.currentItem = res;\r\n    }), (error: any) => console.error(error);\r\n  }\r\n\r\n  UpdateTodo(todoitem:TodoItem, id:number){\r\n    if(isNaN(Number(id))){\r\n      console.log(\"invalid input\");\r\n      return;\r\n    }\r\n    return this.http.put<TodoItem>(`https://localhost:7253/api/TodoItems/${id}`,todoitem)\r\n  }\r\n\r\n  PostTest(todos:TodoItem[]){\r\n    return this.http.post<TodoItem[]>(`https://localhost:7253/api/TodoItems`,todos)\r\n  }\r\n  \r\n  DeleteItem(todo:TodoItem, id:number){\r\n    return this.http.delete<TodoItem>(`https://localhost:7253/api/TodoItems/${id}`)\r\n  }\r\n}\r\n\r\n\r\ninterface TodoItem {\r\n  Id: number;\r\n  Name: string;\r\n  Complete: boolean;\r\n}\r\n\r\nfunction stoi(id: string) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}